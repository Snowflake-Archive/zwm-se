{"events":{"name":"events","summary":"A basic event manager, allows for adding multiple listeners to an event.","module":"events","module-kind":"library","url":"library/events.html"},"events.addListener":{"name":"events.addListener(listener, callback)","summary":"Adds a listener to the event manager.","module":"events","module-kind":"library","url":"library/events.html#v:addListener"},"events.check":{"name":"events.check(e)","summary":"Checks events.","module":"events","module-kind":"library","url":"library/events.html#v:check"},"events.listen":{"name":"events.listen([useRaw])","summary":"Starts listening for events.","module":"events","module-kind":"library","url":"library/events.html#v:listen"},"events.new":{"name":"events.new()","summary":"Creates a new event manager.","module":"events","module-kind":"library","url":"library/events.html#v:new"},"file":{"name":"file","summary":"File utilities","module":"file","module-kind":"library","url":"library/file.html"},"file.read":{"name":"file.read(path)","summary":"Reads a file and its contents.","module":"file","module-kind":"library","url":"library/file.html#v:read"},"file.readJSON":{"name":"file.readJSON(path)","summary":"Reads the JSON content of a file.","module":"file","module-kind":"library","url":"library/file.html#v:readJSON"},"file.write":{"name":"file.write(path, content)","summary":"Writes to a file with the specified content.","module":"file","module-kind":"library","url":"library/file.html#v:write"},"file.writeJSON":{"name":"file.writeJSON(path, content)","summary":"Writes the specified content to a file as JSON.","module":"file","module-kind":"library","url":"library/file.html#v:writeJSON"},"input":{"name":"input","module":"input","module-kind":"module","url":"module/input.html"},"log":{"name":"log","summary":"Logger","module":"log","module-kind":"library","url":"library/log.html"},"log.critical":{"name":"log.critical(message, ...)","summary":"Logs a message as a Critcal Error.","module":"log","module-kind":"library","url":"library/log.html#v:critical"},"log.debug":{"name":"log.debug(message, ...)","summary":"Logs a message as a Debug message.","module":"log","module-kind":"library","url":"library/log.html#v:debug"},"log.dump":{"name":"log.dump(file)","summary":"Dumps logs.","module":"log","module-kind":"library","url":"library/log.html#v:dump"},"log.error":{"name":"log.error(message, ...)","summary":"Logs a message as an Error.","module":"log","module-kind":"library","url":"library/log.html#v:error"},"log.info":{"name":"log.info(message, ...)","summary":"Logs a message as an Info message.","module":"log","module-kind":"library","url":"library/log.html#v:info"},"log.log":{"name":"log.log(type, message, ...)","summary":"Logs a message.","module":"log","module-kind":"library","url":"library/log.html#v:log"},"log.new":{"name":"log.new(debug)","summary":"Creates a new logger.","module":"log","module-kind":"library","url":"library/log.html#v:new"},"log.warn":{"name":"log.warn(message, ...)","summary":"Logs a message as a Warning.","module":"log","module-kind":"library","url":"library/log.html#v:warn"},"registry":{"name":"registry","summary":"Registry getter & editor","module":"registry","module-kind":"library","url":"library/registry.html"},"registry.getEnumValues":{"name":"registry.getEnumValues(from, key)","summary":"Gets a key's enum values.","module":"registry","module-kind":"library","url":"library/registry.html#v:getEnumValues"},"registry.getKeyType":{"name":"registry.getKeyType(from, key)","summary":"Gets a key's type.","module":"registry","module-kind":"library","url":"library/registry.html#v:getKeyType"},"registry.read":{"name":"registry.read(from, isRaw)","summary":"Reads a full registry file.","module":"registry","module-kind":"library","url":"library/registry.html#v:read"},"registry.readKey":{"name":"registry.readKey(from, key, isRaw)","summary":"Reads a key from a registry file.","module":"registry","module-kind":"library","url":"library/registry.html#v:readKey"},"registry.update":{"name":"registry.update(from, to)","summary":"Upgrades an old registry to a new one.","module":"registry","module-kind":"library","url":"library/registry.html#v:update"},"registry.writeKey":{"name":"registry.writeKey(from, key, data)","summary":"Reads a key from a registry file.","module":"registry","module-kind":"library","url":"library/registry.html#v:writeKey"},"scrollbox":{"name":"scrollbox","summary":"A fancy scrollbox creater that have scrollbars and scrolling boxes.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html"},"scrollbox.addToEventManager":{"name":"scrollbox.addToEventManager(em)","summary":"Adds events to the specified EventManager.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:addToEventManager"},"scrollbox.ensureScroll":{"name":"scrollbox.ensureScroll(d)","summary":"Scrolls the specified delta, and ensures it can be scrolled to.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:ensureScroll"},"scrollbox.getScroll":{"name":"scrollbox.getScroll()","summary":"Gets the scroll position of a scrollbox.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:getScroll"},"scrollbox.getTerminal":{"name":"scrollbox.getTerminal()","summary":"Gets the scrollbox's terminal.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:getTerminal"},"scrollbox.new":{"name":"scrollbox.new(x, y, w, h, parent [, renderScrollbars])","summary":"Creates a scrollbox frame.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:new"},"scrollbox.onMouseScroll":{"name":"scrollbox.onMouseScroll(d, x, y)","summary":"Fires a scroll event.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:onMouseScroll"},"scrollbox.redraw":{"name":"scrollbox.redraw()","summary":"Redraws a scrollbox.","module":"scrollbox","module-kind":"library","url":"library/scrollbox.html#v:redraw"},"util":{"name":"util","summary":"Some utilities","module":"util","module-kind":"library","url":"library/util.html"},"util.drawPixelCharacter":{"name":"util.drawPixelCharacter(x, y, tl, tr, l, r, bl, br, tc, bc)","summary":"Draws a drawing char.","module":"util","module-kind":"library","url":"library/util.html#v:drawPixelCharacter"},"util.fromBlit":{"name":"util.fromBlit(blit)","summary":"Converts a blit to a color number","module":"util","module-kind":"library","url":"library/util.html#v:fromBlit"},"util.selectXfromBlit":{"name":"util.selectXfromBlit(x, blit)","summary":"Converts a blit to a color number","module":"util","module-kind":"library","url":"library/util.html#v:selectXfromBlit"},"wm":{"name":"wm","summary":"Wrappers for window manager functions","module":"wm","module-kind":"library","url":"library/wm.html"},"wm.getSystemLogger":{"name":"wm.getSystemLogger()","summary":"Gets the system's logger.","module":"wm","module-kind":"library","url":"library/wm.html#v:getSystemLogger"},"wm.launch":{"name":"wm.launch(object, options [, focused])","summary":"Launches a program.","module":"wm","module-kind":"library","url":"library/wm.html#v:launch"}}