{"Button":{"name":"Button","summary":"Really fancy buttons","module":"Button","module-kind":"ui","url":"ui/Button.html"},"Button.click":{"name":"Button.click([isFirst])","summary":"Clicks a button.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:click"},"Button.new":{"name":"Button.new(x, y, text, callback [, disabled [, visible [, disablePadding [, colors [, term]]]]])","summary":"Creates a new button.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:new"},"Button.remove":{"name":"Button.remove()","summary":"Removes a button","module":"Button","module-kind":"ui","url":"ui/Button.html#v:remove"},"Button.render":{"name":"Button.render([useBgRender])","summary":"Renders the button.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:render"},"Button.reposition":{"name":"Button.reposition(x, y)","summary":"Repositions a button.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:reposition"},"Button.setCallback":{"name":"Button.setCallback(The)","summary":"Sets the callback of the button","module":"Button","module-kind":"ui","url":"ui/Button.html#v:setCallback"},"Button.setDisabled":{"name":"Button.setDisabled(disabled)","summary":"Sets whether or not the button is disabled.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:setDisabled"},"Button.setFocused":{"name":"Button.setFocused(focused)","summary":"Sets whether or not the button is focused.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:setFocused"},"Button.setText":{"name":"Button.setText(text)","summary":"Sets the text of a button.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:setText"},"Button.setVisible":{"name":"Button.setVisible(visible)","summary":"Sets whether or not the button is visible.","module":"Button","module-kind":"ui","url":"ui/Button.html#v:setVisible"},"Color":{"name":"Color","summary":"Utilities for colors","module":"Color","module-kind":"utils","url":"utils/Color.html"},"Color.fromBlit":{"name":"Color.fromBlit(blit)","summary":"Converts a blit to a color number","module":"Color","module-kind":"utils","url":"utils/Color.html#v:fromBlit"},"ContextMenu":{"name":"ContextMenu","summary":"Context menus.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html"},"ContextMenu.hide":{"name":"ContextMenu.hide()","summary":"Hides the context menu.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:hide"},"ContextMenu.new":{"name":"ContextMenu.new(objects [, triggerMethod [, colors [, dropdownStyle]]])","summary":"Creates a new context menu via a dictionary.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:new"},"ContextMenu.remove":{"name":"ContextMenu.remove()","summary":"Removes a context menu","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:remove"},"ContextMenu.render":{"name":"ContextMenu.render(x, y [, objectsOnly])","summary":"Renders a context menu.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:render"},"ContextMenu.setObjects":{"name":"ContextMenu.setObjects(objects)","summary":"Sets the objects of the context menu.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:setObjects"},"ContextMenu.setTriggerMethod":{"name":"ContextMenu.setTriggerMethod(objects)","summary":"Sets the objects of the context menu.","module":"ContextMenu","module-kind":"ui","url":"ui/ContextMenu.html#v:setTriggerMethod"},"Drawing":{"name":"Drawing","summary":"Utilities for drawing things (borders and sub-pixel chars)","module":"Drawing","module-kind":"utils","url":"utils/Drawing.html"},"Drawing.drawBorder":{"name":"Drawing.drawBorder(x, y, w, h, color, style)","summary":"Draws a border around something.","module":"Drawing","module-kind":"utils","url":"utils/Drawing.html#v:drawBorder"},"Drawing.drawPixelCharacter":{"name":"Drawing.drawPixelCharacter(x, y, tl, tr, l, r, bl, br, tc, bc)","summary":"Draws a drawing char.","module":"Drawing","module-kind":"utils","url":"utils/Drawing.html#v:drawPixelCharacter"},"Drawing.writeCentered":{"name":"Drawing.writeCentered(text [, t [, offset]])","summary":"Draws text centered.","module":"Drawing","module-kind":"utils","url":"utils/Drawing.html#v:writeCentered"},"EventManager":{"name":"EventManager","summary":"A basic event manager, allows for adding multiple listeners to an event.","module":"EventManager","module-kind":"core","url":"core/EventManager.html"},"EventManager.addListener":{"name":"EventManager.addListener(listener, callback)","summary":"Adds a listener to the event manager.","module":"EventManager","module-kind":"core","url":"core/EventManager.html#v:addListener"},"EventManager.check":{"name":"EventManager.check(e)","summary":"Checks events.","module":"EventManager","module-kind":"core","url":"core/EventManager.html#v:check"},"EventManager.listen":{"name":"EventManager.listen([useRaw])","summary":"Starts listening for events.","module":"EventManager","module-kind":"core","url":"core/EventManager.html#v:listen"},"EventManager.new":{"name":"EventManager.new()","summary":"Creates a new event manager.","module":"EventManager","module-kind":"core","url":"core/EventManager.html#v:new"},"EventManager.stop":{"name":"EventManager.stop()","summary":"Stops the event manager.","module":"EventManager","module-kind":"core","url":"core/EventManager.html#v:stop"},"Files":{"name":"Files","summary":"File utilities for saving and reading files","module":"Files","module-kind":"utils","url":"utils/Files.html"},"Files.read":{"name":"Files.read(path)","summary":"Reads a file and its contents.","module":"Files","module-kind":"utils","url":"utils/Files.html#v:read"},"Files.readJSON":{"name":"Files.readJSON(path)","summary":"Reads the JSON content of a file.","module":"Files","module-kind":"utils","url":"utils/Files.html#v:readJSON"},"Files.write":{"name":"Files.write(path, content)","summary":"Writes to a file with the specified content.","module":"Files","module-kind":"utils","url":"utils/Files.html#v:write"},"Files.writeJSON":{"name":"Files.writeJSON(path, content)","summary":"Writes the specified content to a file as JSON.","module":"Files","module-kind":"utils","url":"utils/Files.html#v:writeJSON"},"Input":{"name":"Input","summary":"Inputs with many features.","module":"Input","module-kind":"ui","url":"ui/Input.html"},"Input.fire":{"name":"Input.fire(e)","summary":"Fires events (key & char) to an input","module":"Input","module-kind":"ui","url":"ui/Input.html#v:fire"},"Input.new":{"name":"Input.new(x, y, w [, onChange [, onComplete [, placeholder [, disabled [, default [, visible]]]]]])","summary":"Creates a new input object via a dictionary.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:new"},"Input.remove":{"name":"Input.remove()","summary":"Removes an input","module":"Input","module-kind":"ui","url":"ui/Input.html#v:remove"},"Input.render":{"name":"Input.render()","summary":"Renders an input.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:render"},"Input.reposition":{"name":"Input.reposition(x, y)","summary":"Repositions an input.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:reposition"},"Input.resize":{"name":"Input.resize(w)","summary":"Resizes the input.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:resize"},"Input.setContent":{"name":"Input.setContent(content)","summary":"Sets the content of the input.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:setContent"},"Input.setDisabled":{"name":"Input.setDisabled(disabled)","summary":"Sets whether or not the input is disabled.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:setDisabled"},"Input.setFocused":{"name":"Input.setFocused(focused)","summary":"Sets whether or not the input is focused.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:setFocused"},"Input.setPlaceholder":{"name":"Input.setPlaceholder(focused)","summary":"Sets the placeholder for the input.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:setPlaceholder"},"Input.setVisible":{"name":"Input.setVisible(visible)","summary":"Sets whether or not the input is visible.","module":"Input","module-kind":"ui","url":"ui/Input.html#v:setVisible"},"Logger":{"name":"Logger","summary":"A logger good enough for ComputerCraft.","module":"Logger","module-kind":"core","url":"core/Logger.html"},"Logger.critical":{"name":"Logger.critical(message, ...)","summary":"Logs a message as a Critcal Error.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:critical"},"Logger.debug":{"name":"Logger.debug(message, ...)","summary":"Logs a message as a Debug message.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:debug"},"Logger.dump":{"name":"Logger.dump(file)","summary":"Dumps logs.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:dump"},"Logger.error":{"name":"Logger.error(message, ...)","summary":"Logs a message as an Error.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:error"},"Logger.info":{"name":"Logger.info(message, ...)","summary":"Logs a message as an Info message.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:info"},"Logger.log":{"name":"Logger.log(type, message, ...)","summary":"Logs a message.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:log"},"Logger.new":{"name":"Logger.new(debug)","summary":"Creates a new logger.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:new"},"Logger.warn":{"name":"Logger.warn(message, ...)","summary":"Logs a message as a Warning.","module":"Logger","module-kind":"core","url":"core/Logger.html#v:warn"},"MenuBar":{"name":"MenuBar","summary":"Bars with context menus","module":"MenuBar","module-kind":"ui","url":"ui/MenuBar.html"},"MenuBar.inject":{"name":"MenuBar.inject(eventManager, uiManager)","summary":"Adds the MenuBar's events into event managers.","module":"MenuBar","module-kind":"ui","url":"ui/MenuBar.html#v:inject"},"MenuBar.new":{"name":"MenuBar.new(The)","summary":"Creates a new menu bar.","module":"MenuBar","module-kind":"ui","url":"ui/MenuBar.html#v:new"},"MenuBar.render":{"name":"MenuBar.render()","summary":"Renders the menubar.","module":"MenuBar","module-kind":"ui","url":"ui/MenuBar.html#v:render"},"MiscUtils":{"name":"MiscUtils","summary":"Miscellaneous utilities","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html"},"MiscUtils.getPixelChar":{"name":"MiscUtils.getPixelChar(tl, tr, l, r, bl, br)","summary":"Gets a drawing character from the cells that are set to true.","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:getPixelChar"},"MiscUtils.selectXfromBlit":{"name":"MiscUtils.selectXfromBlit(x, blit)","summary":"Selects an X position from a blit string (or just any string really)","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:selectXfromBlit"},"MiscUtils.stringifyTime":{"name":"MiscUtils.stringifyTime(time)","summary":"Stringifies time into a nice, human readable format.","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:stringifyTime"},"MiscUtils.tableClone":{"name":"MiscUtils.tableClone(tbl)","summary":"Clones a table.","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:tableClone"},"MiscUtils.tableContains":{"name":"MiscUtils.tableContains(tbl, val)","summary":"Checks if a table contains a value.","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:tableContains"},"MiscUtils.uuid":{"name":"MiscUtils.uuid()","summary":"Gets a semi-random UUID.","module":"MiscUtils","module-kind":"utils","url":"utils/MiscUtils.html#v:uuid"},"Module Versions":{"name":"Module Versions","summary":"This page contains a list of versionf for all modules and APIs of zwm SE.","module":"Module Versions","module-kind":"misc","url":"misc/Module Versions.html"},"ProcessOptions":{"name":"ProcessOptions","summary":"A table containing options to start a process.","module":"ProcessOptions","module-kind":"misc","url":"misc/ProcessOptions.html"},"Reader":{"name":"Reader","summary":"Util for reading registries","module":"Reader","module-kind":"registry","url":"registry/Reader.html"},"Reader.get":{"name":"Reader.get(key)","summary":"Reads a key.","module":"Reader","module-kind":"registry","url":"registry/Reader.html#v:get"},"Reader.getEnum":{"name":"Reader.getEnum(key)","summary":"Gets a key's enum values.","module":"Reader","module-kind":"registry","url":"registry/Reader.html#v:getEnum"},"Reader.getType":{"name":"Reader.getType(key)","summary":"Gets a key's type.","module":"Reader","module-kind":"registry","url":"registry/Reader.html#v:getType"},"Reader.new":{"name":"Reader.new(name, fromDefaults)","summary":"Creates a new RegistryReader.","module":"Reader","module-kind":"registry","url":"registry/Reader.html#v:new"},"Reader.reload":{"name":"Reader.reload([data])","summary":"Reloads the registry.","module":"Reader","module-kind":"registry","url":"registry/Reader.html#v:reload"},"Scrollbox":{"name":"Scrollbox","summary":"A fancy scrollbox creater that have scrollbars and scrolling boxes.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html"},"Scrollbox.addToEventManager":{"name":"Scrollbox.addToEventManager(em)","summary":"Adds events to the specified EventManager.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:addToEventManager"},"Scrollbox.ensureScroll":{"name":"Scrollbox.ensureScroll(d)","summary":"Scrolls the specified delta, and ensures it can be scrolled to.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:ensureScroll"},"Scrollbox.getScroll":{"name":"Scrollbox.getScroll()","summary":"Gets the scroll position of a scrollbox.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:getScroll"},"Scrollbox.getTerminal":{"name":"Scrollbox.getTerminal()","summary":"Gets the scrollbox's terminal.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:getTerminal"},"Scrollbox.getWindow":{"name":"Scrollbox.getWindow()","summary":"Gets the scrollbox's window.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:getWindow"},"Scrollbox.new":{"name":"Scrollbox.new(x, y, w, h, parent [, renderScrollbars [, visible [, defaultColor]]])","summary":"Creates a scrollbox frame via a dictionary.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:new"},"Scrollbox.onMouseScroll":{"name":"Scrollbox.onMouseScroll(d, x, y)","summary":"Fires a scroll event.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:onMouseScroll"},"Scrollbox.redraw":{"name":"Scrollbox.redraw()","summary":"Redraws a scrollbox.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:redraw"},"Scrollbox.reposition":{"name":"Scrollbox.reposition(x, y, w, h)","summary":"Repositions the scrollbox.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:reposition"},"Scrollbox.resetScroll":{"name":"Scrollbox.resetScroll()","summary":"Resets the scrollbox's scroll.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:resetScroll"},"Scrollbox.setVisible":{"name":"Scrollbox.setVisible(value)","summary":"Sets whether or not the scrollbox is visible.","module":"Scrollbox","module-kind":"ui","url":"ui/Scrollbox.html#v:setVisible"},"TriggerMethod":{"name":"TriggerMethod","summary":"A table containing a method to trigger a context menu.","module":"TriggerMethod","module-kind":"misc","url":"misc/TriggerMethod.html"},"UI Manager":{"name":"UI Manager","summary":"An event manager to be used with UI components.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html"},"UI Manager.addButton":{"name":"UI Manager.addButton(button, scrollbox)","summary":"Adds a button to the event manager.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:addButton"},"UI Manager.addContextMenu":{"name":"UI Manager.addContextMenu(contextMenu, scrollbox)","summary":"Adds a context menu to the event manager.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:addContextMenu"},"UI Manager.addInput":{"name":"UI Manager.addInput(input, scrollbox)","summary":"Adds an input to the event manager.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:addInput"},"UI Manager.check":{"name":"UI Manager.check(e)","summary":"Checks events.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:check"},"UI Manager.getID":{"name":"UI Manager.getID()","summary":"Gets the ID of the UI manager's instance.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:getID"},"UI Manager.inject":{"name":"UI Manager.inject(manager)","summary":"Injects the event manager into the event manager.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:inject"},"UI Manager.new":{"name":"UI Manager.new(xOffset, yOffset)","summary":"Creates a new UIManager.","module":"UI Manager","module-kind":"ui","url":"ui/UI Manager.html#v:new"},"Updater":{"name":"Updater(from, to)","summary":"Updates a registry","module":"Updater","module-kind":"registry","url":"registry/Updater.html"},"Window Manager Events":{"name":"Window Manager Events","summary":"Documentation for events that may be passed from the window manager.","module":"Window Manager Events","module-kind":"misc","url":"misc/Window Manager Events.html"},"WindowManager":{"name":"WindowManager","summary":"The window manager and it's functions.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html"},"WindowManager.addProcess":{"name":"WindowManager.addProcess(The, options [, focused])","summary":"Creates a process","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:addProcess"},"WindowManager.getProcesses":{"name":"WindowManager.getProcesses()","summary":"Gets all running processes.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:getProcesses"},"WindowManager.getSize":{"name":"WindowManager.getSize()","summary":"Gets the size of the window manager.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:getSize"},"WindowManager.getSystemLogger":{"name":"WindowManager.getSystemLogger()","summary":"Gets the system's logger.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:getSystemLogger"},"WindowManager.killProcess":{"name":"WindowManager.killProcess(id)","summary":"Kills a process with the specified ID.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:killProcess"},"WindowManager.reloadModules":{"name":"WindowManager.reloadModules()","summary":"Reloads all system modules","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:reloadModules"},"WindowManager.setFocus":{"name":"WindowManager.setFocus(The, Whether)","summary":"Sets whether or not a process is focused.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:setFocus"},"WindowManager.setProcessMaxamized":{"name":"WindowManager.setProcessMaxamized(The, Whether)","summary":"Sets whether or not a process is minimized.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:setProcessMaxamized"},"WindowManager.setProcessMinimized":{"name":"WindowManager.setProcessMinimized(The, Whether)","summary":"Sets whether or not a process is minimized.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:setProcessMinimized"},"WindowManager.setTitle":{"name":"WindowManager.setTitle(The, The)","summary":"Sets the title of a window.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:setTitle"},"WindowManager.started":{"name":"WindowManager.started = 0","summary":"A variable that stores the time the window manager was started.","module":"WindowManager","module-kind":"core","url":"core/WindowManager.html#v:started"},"Writer":{"name":"Writer","summary":"Util for writing to registries","module":"Writer","module-kind":"registry","url":"registry/Writer.html"},"Writer.new":{"name":"Writer.new(name)","summary":"Creates a new RegistryWriter.","module":"Writer","module-kind":"registry","url":"registry/Writer.html#v:new"},"Writer.set":{"name":"Writer.set(key, value)","summary":"Sets a key.","module":"Writer","module-kind":"registry","url":"registry/Writer.html#v:set"}}
